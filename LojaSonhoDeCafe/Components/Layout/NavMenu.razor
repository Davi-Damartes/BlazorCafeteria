@implements IDisposable
@inject ICarrinhoCompraService carrinhoCompraService
@inject NavigationManager NavigationManager

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

        <div class="nav-item px-3">
        <NavLink class="nav-link" href="Produtos" >
        <i class="fa-solid fa-clipboard-list mudandoImagem" style=" color: blue;"></i> Produtos
            </NavLink>
        </div>

        <ProdutosCategoriaNavMenu />

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="CadastroProduto">
        <i class="fa-solid fa-clipboard-list mudandoImagem" style="color: crimson;"></i> Cadastrar Produto
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Faturamento">
                <i class="fa-solid fa-cash-register mudandoImagem" style="color: greenyellow;"></i> Faturamento
            </NavLink>
        </div>

         <div class="nav-item px-3">
        <NavLink class="nav-link" href="BuscarCep">
                <i class="fa-solid fa-cash-register mudandoImagem" style="color: greenyellow;"></i> Api Teste
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="BuscarCep">
                <i class="fa-solid fa-barcode mudandoImagem" style="color: #63E6BE;"></i> Buscar Cep
            </NavLink>
        </div>

        <div class="nav-item px-3 d-sm-none">
            <NavLink class="nav-link" href="CarrinhoCompra">
                <i class="fa-solid fa-cart-arrow-down"></i>&nbsp;Carrinho(<b>@carrinhoCompraItemContador</b>)
            </NavLink>
        </div>



@* 
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
     </nav>
 </div> 
 *@


@code {

    private string? currentUrl;

    private int carrinhoCompraItemContador = 0;


    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        carrinhoCompraService.OnCarrinhoCompraChanged += CarrinhoCompraChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    protected void CarrinhoCompraChanged(int totalQuantidade)
    {
        carrinhoCompraItemContador = totalQuantidade;
        StateHasChanged();
    }

    public void Dispose( )
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
        carrinhoCompraService.OnCarrinhoCompraChanged -= CarrinhoCompraChanged;
    }

}

