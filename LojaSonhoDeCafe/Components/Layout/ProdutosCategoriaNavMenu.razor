@if (CategoriasDto == null && MensagemErro == null)
{
    <ExibirSpinner />
}
else if (MensagemErro != null)
{
    <ExibirErro MensagemErro="@MensagemErro" />
}
else
{
    @foreach (var categoria in CategoriasDto!)
    {
        var link = "/ProdutosPorCategoria/" + categoria.Id;
        string iconColorStyle = categoria.Nome switch
        {
            "Bebidas" => "color: #B22222",
            "Salgados" => "color: #FFD700",
            "Doces" => "color: #FF69B4",
            "Lanches" => "color: #FFA500",
            _ => string.Empty
        };

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@link">
                <span class="@categoria.IconeCss" style="@iconColorStyle"></span>&nbsp;@categoria.Nome
            </NavLink>
        </div>
    }


}


@code {
        [Inject]
        public IProdutoService? ProdutoService { get; set; }

        public IEnumerable<CategoriaDto>? CategoriasDto { get; set; }

        public string? MensagemErro { get; set; }

        protected override async Task OnInitializedAsync( )
        {
            try
            {
                CategoriasDto = await ProdutoService!.BuscarCategorias();
            }
            catch (Exception ex)
            {
                MensagemErro = ex.Message;
            }
        }
}
