@page "/ProdutosDetalhes/{Id:guid}"


@if (Produto is null && MensagemErro is null)
{
   <ExibirSpinner />
    <p>Loadding ...</p>
}
else if (MensagemErro is not null)
{
    <ExibirErro MensagemErro="@MensagemErro"></ExibirErro>
}
else
{
    <h3 class="mb-5">Detalhes do Produto</h3>
    <div class="row">
        <div class="col-md-4">
            <img src="@Produto?.FotoUrl" class="img-fluid mb-3" alt="Imagem do Produto">
        </div>
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@Produto.Nome</h5>
                        <p class="card-text">@Produto.Descricao.</p>
                        <p>@Produto.Preco.ToString("c")&nbsp;(@Produto.QuantidadeEmEstoque items)</p>                                            
                                <button class="btn btn-success"
                                        @onclick="() => AdicionarAoCarrinho_Click(new CarrinhoItemAdicionaDto
                                        {
                                         CarrinhoId = UsuarioLogado.CarrinhoId,
                                         ProdutoId = Produto.Id,
                                         Quantidade = 1
                                         })">
                                    Incluir no Carrinho
                                </button>                      
                        </div>    
                    </div>
               </div>
        </div>  
}


@code {

    [Inject]
    private IProdutoService? ProdutoService { get; set; }

    [Inject]
    private ICarrinhoCompraService? CarrinhoCompraService { get; set; }

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    [Parameter]
    public Guid Id { get; set; }

    public ProdutoDto? Produto { get; set; }

    public string? MensagemErro {get;set;}

    protected override async Task OnInitializedAsync( )
    {
        try
        {
            Produto = await ProdutoService!.ObterUmProduto(Id);
        }

        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

    protected async Task AdicionarAoCarrinho_Click(CarrinhoItemAdicionaDto carrinhoItemAdicionaDto)
    {
        try
        {
            var carrinhoItemDto = await CarrinhoCompraService!.AdicionaItemDto(carrinhoItemAdicionaDto);
        
            NavigationManager!.NavigateTo("/");
        }

        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

}
