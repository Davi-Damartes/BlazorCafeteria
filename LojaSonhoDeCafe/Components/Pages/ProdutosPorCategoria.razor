@page "/ProdutosPorCategoria/{CategoriaId:int}"

@if (ProdutosDto is null && MensagemErro is null)
{
   <ExibirSpinner />
}
else if (MensagemErro is not null)
{
    <ExibirErro MensagemErro="@MensagemErro"></ExibirErro>
}
else
{
    <h3>Produtos (@NomeCategoria)</h3>
    if(ProdutosDto!.Count() > 0)
    {
        <div class="row mt-3">
            <ExibirProdutos Produtos="@ProdutosDto"></ExibirProdutos>
        </div>
    }

}


@code {

    [Parameter]
    public int CategoriaId { get; set; }

    [Inject]
    public IProdutoService? ProdutoService { get; set; }

    [Inject]
    public ICarrinhoCompraService? CarrinhoCompraService { get; set; }

    [Inject]
    public ILocalStorageProdutosService? GerenciaProdutoLocalStorage { get; set; }

    public IEnumerable<ProdutoDto>? ProdutosDto { get; set; }

    public string? NomeCategoria { get; set; }
    public string? MensagemErro { get; set; }

    protected override async Task OnParametersSetAsync( )
    {
        try
        {
            await GerenciaProdutoLocalStorage!.AtualizarDadosLocalStorage(ProdutosDto);

            //ProdutosDto = await ProdutoService!.BuscarItensPorCategoria(CategoriaId);
            ProdutosDto = await GetColecaoProdutosPorCategoria(CategoriaId);


            if(ProdutosDto != null && ProdutosDto.Count() > 0)
            {
                var produtoDto = ProdutosDto
                            .FirstOrDefault(s => s.CategoriaId == CategoriaId);

                if(produtoDto != null)
                {
                    NomeCategoria = produtoDto.CategoriaNome;
                }
            }
        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

    private async Task<IEnumerable<ProdutoDto>> GetColecaoProdutosPorCategoria(int categoriaId)
    {
        var listaDeProdutos = await GerenciaProdutoLocalStorage.GetCollection();

        if(listaDeProdutos != null)
        {
            return listaDeProdutos.Where(p => p.CategoriaId == categoriaId);
        }
        else
        {
            return await ProdutoService!.BuscarItensPorCategoria(categoriaId);
        }
    }
}
