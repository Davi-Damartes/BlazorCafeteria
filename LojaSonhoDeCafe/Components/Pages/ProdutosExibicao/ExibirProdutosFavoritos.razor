@page "/ExibiProdutosFavoritos"

@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
@inject IConfiguration config


<PageTitle>ProdutosFavoritos</PageTitle>
@if (ProdutosFavoritos is null && MensagemErro is null)
{
    <ExibirSpinner />
}
else if (MensagemErro is not null)
{
    <ExibirErro MensagemErro="@MensagemErro"></ExibirErro>
}
else
{
    <div class="row mt-3">
            @if (ProdutosFavoritos!.Count() > 0)
            {       
                <h4 class="text-center mb-1 top-100"><b>Produtos Favoritos</b></h4>
                    <div class="produtos" style="position-absolute top-50 start-50 translate-middle">
                        @foreach (var produto in ProdutosFavoritos!)
                        {
                            <div class="card" style="width: 18rem;">
                                <div class="card-body">
                                    <a href="/produtosdetalhes/@produto.Id">
                                        @if (File.Exists(produto.FotoUrl))
                                        {
                                            <img src="@produto.FotoUrl" class="card-img-top" alt="imagem do produto">
                                        }
                                        else
                                        {
                                            <img src="@CreateWebPath(produto.FotoUrl)" class="card-img-top" alt="imagem do produto">
                                        }
                                    </a>
                                    <h5 class="card-title">@produto.Nome</h5>
                                    <p class="card-text descricao limitarLinhas-Card">@produto.Descricao</p>
                                    <a href="/produtosdetalhes/@produto.Id">
                                        <h5 class="card-title mb-3 preco-formatacao text-center">
                                            @produto.Preco.ToString("c")
                                        </h5>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
            }
            else
            {
                <div class="elemento">
                    <h1>Adicione produtos aos seus favoritos 😊</h1>
                    <h2>Basta clicar no ícone de coração <i class="fa-solid fa-heart"></i> na página dos produtos.</h2>
                </div>
            }
       
    </div>
}

@code {

    [Inject]
    public IProdutoHttpService? ProdutoHttpService { get; set; }


    public IEnumerable<ProdutoDto>? ProdutosFavoritos { get; set; }

    private string? MensagemErro { get; set; }

    private string CreateWebPath(string? relativePath)
    {
        return Path.Combine(config.GetValue<string>("WebStorageRoot")!, relativePath!);
    }

    protected override async Task OnInitializedAsync( )
    {
        try
        {
            ProdutosFavoritos = await ProdutoHttpService!.ObterProdutosFavoritos();
        }
        catch (Exception ex)
        {

            MensagemErro = ex.Message;

        }
    }
}
