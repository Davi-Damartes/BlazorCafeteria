@page "/produtos"

<PageTitle>Produtos</PageTitle>
@if(@Produtos == null)
{
     <ExibirSpinner /> 
}

@if (Produtos != null && Produtos.Any())
{       
        <CarouselSlides></CarouselSlides>

        <h3 class="mb-3"> Produtos</h3>
        @if (Produtos.Count() > 0)
        {
            var produtosPorCategoria = from produto in Produtos
                                       group produto by produto.CategoriaId into prodPorCatGrupo
                                       orderby prodPorCatGrupo.Key
                                       select prodPorCatGrupo;

                <div class="row"> 
                    <div class="col-12 col-md-5 mb-4">
                        <form class="justify-content-center justify-content-md-start
                            mb-3 mb-md-0">
                            <div class="input-group input-group-lg">
                                <input type="text" class="form-control" placeholder="Digite o nome do Produto">
                                <button class="btn btn-dark" type="button">Buscar</button>
                            </div>
                        </form>
                    </div>
                    <div class="col-12 col-md-7">
                        <div class="d-flex flex-row-reverse justify-content-center justify-content-md-start">
                            <form class="d-inline-block">
                                <select class="form-select form-select-lg">
                                    <option>Ordernar por menor Preço </option>
                                    <option>Ordernar por maior Preço </option>
                                </select>
                            </form>
                            <nav class="d-inline-block me-3">
                                <ul class="pagination pagination-sm my-0">
                                    <li class="page-item">
                                        <a class="page-link" href="#">1</a>
                                        </li>
                                    <li class="page-item">
                                        <a class="page-link" href="#">2</a>
                                        </li>
                                    <li class="page-item disabled">
                                        <a class="page-link" href="#">3</a>
                                        </li>
                                    <li class="page-item">
                                        <a class="page-link" href="#">4</a>
                                        </li>
                                </ul>
                            </nav>
                        </div>
                    </div> 
                 </div>

                  
                    @foreach (var prodGrupo in produtosPorCategoria)
                    {
                         <div class="row mt-3">
                             <h4 class="mb-5">@prodGrupo.FirstOrDefault(pg => pg.CategoriaId == prodGrupo.Key)!.CategoriaNome</h4>
                             <ExibirProdutos Produtos="@prodGrupo"> </ExibirProdutos>   
                         </div>
                    }

        }
}
else
{
    <p>Nenhum produto encontrado...</p>
}

@code {
    [Inject]
    private IProdutoService? ProdutoService { get; set; }
    [Inject]
    public ICarrinhoCompraService?  CarrinhoCompraService { get; set; }

    [Inject]
    public ILocalStorageProdutosService? GerenciaProdutoLocalStorage { get; set; }
    [Inject]
    public ILocalStorageCarrinhoItensService? GerenciaCarrinhoLocalStorage { get; set; }

    public IEnumerable<ProdutoDto>? Produtos { get; set; }

    private string? MensagemErro { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LimpaLocalStorage();

            Produtos = await ProdutoService!.ObterProdutos();
            //Produtos = await GerenciaProdutoLocalStorage!.GetCollection();


            var carrinhoCompraItens = await CarrinhoCompraService!.ObterItens(UsuarioLogado.UsuarioId);
            //var carrinhoCompraItens = await GerenciaCarrinhoLocalStorage!
                                           // .GetCollection();


            var totalQuantidade = carrinhoCompraItens.Sum(i => i.Quantidade);

            CarrinhoCompraService!.RaiseEventCarrinhoCompraChanged(totalQuantidade);

        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

        private async Task LimpaLocalStorage( )
        {
            await GerenciaProdutoLocalStorage!.RemoveCollection();
            await GerenciaCarrinhoLocalStorage!.RemoveCollection();
        }

}