﻿<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title"><b>@Titulo</b></h2>
                <button type="button" class="close"
                        @onclick="@ModalCLose">
                    <i class="bi bi-x"></i>
                </button>
            </div>
            <div class="modal-body">
                <h4><p>@Mensagem</p></h4>
            </div>
            <div class="modal-footer">
                @switch (DialogType)
                {
                    case ModalDialogType.Ok:
                        <button type="button" class="btn btn-primary" @onclick=@ModalOk>OK</button>
                        break;
                    case ModalDialogType.OkCancel:
                        <button type="button" class="btn btn-secondary" @onclick="@ModalCLose">Cancel</button>
                        <button type="button" class="btn btn-primary" @onclick=@ModalOk>OK</button>
                        break;
                    case ModalDialogType.DeleteCancel:
                        <button type="button" class="btn btn-secondary" @onclick="@ModalCLose">Cancel</button>
                        <button type="button" class="btn btn-danger" @onclick=@ModalOk>Deletar</button>
                        break;
                }
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string Titulo { get; set; } = string.Empty;
    [Parameter]
    public string Mensagem { get; set; } = string.Empty;
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public ModalDialogType DialogType { get; set; }

    private Task ModalCLose()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }


    public enum ModalDialogType
    {
        Ok,
        OkCancel,
        DeleteCancel

    }
} 
