@inject IJSRuntime jsruntime
<div title="Excluir Produto">
    <i class="fa-solid fa-trash icone-lixeira-Exclusao"
       @onclick="() => OpenDialog(produto!)">
    </i>
</div>
@if(AbrirDialogModal)
    {
        <DialogPagamento Titulo="Você deseja excluir esse item?" 
                         Mensagem="Essa ação não pode ser defeita!!!"
                         OnClose="ExcluirProduto_Click"
                         DialogType="DialogPagamento.ModalDialogType.DeleteCancel">
        </DialogPagamento>
   }

@code {

    [Parameter]
    public ProdutoDto? produto { get; set; }

    [Inject]
    public IProdutoService? ProdutoService { get; set; }

    [Inject]
    private NavigationManager? NavigationManager { get; set; }


    public ProdutoDto? _produtoToDelete { get; set; }

    public bool AbrirDialogModal { get; set; }


    private async void ExcluirProduto_Click(bool accepted)
    {
        if (accepted && _produtoToDelete != null)
        {
            await ProdutoService!.RemoverProduto(_produtoToDelete!.Id);
            await ShowSuccessToastr();


            await Task.Delay(1500);
            NavigationManager!.NavigateTo($"/ ");

        }
        AbrirDialogModal = false;
        StateHasChanged();
    }


    public async Task ShowSuccessToastr()
    {
        await jsruntime.ToastrSuccess("Produto Deletado com Sucesso!");
    }

    private void OpenDialog(ProdutoDto produto)
    {
        AbrirDialogModal = true;
        _produtoToDelete = produto;
        StateHasChanged();
    }

}